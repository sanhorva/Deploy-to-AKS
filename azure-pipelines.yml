trigger:
- none

resources:
- repo: self

variables:
  imageRepo: 'interiordesign/demo'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'dockerhub'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    dockerhubsecret: dhauth
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool: 
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
    - task: KubernetesManifest@1
      inputs:
         action: 'createSecret'
         connectionType: 'kubernetesServiceConnection'
         kubernetesServiceConnection: 'aks-sanyi-default'
         namespace: 'default'
         secretType: 'dockerRegistry'
         secretName: '$(dockerhubsecret)'
         dockerRegistryEndpoint: 'dockerhub'
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'aks-sanyi-default'
        namespace: 'defualt'
        manifests: |
          $(Pipeline.Workspace)/manifests/deployment.yml
          $(Pipeline.Workspace)/manifests/service.yml

    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'aks-sanyi-default'
        namespace: 'default'
        manifests: |
          apiVersion: rbac.authorization.k8s.io/v1
          kind: Role
          metadata:
            namespace: default
            name: deployment-role
          rules:
          - apiGroups: ["apps"]
            resources: ["deployments"]
            verbs: ["create", "get", "list", "watch"]
          - apiGroups: [""]
            resources: ["services"]
            verbs: ["create", "get", "list", "watch"]

    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'aks-sanyi-default'
        namespace: 'default'
        manifests: |
          apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            namespace: default
            name: deployment-role-binding
          subjects:
          - kind: ServiceAccount
            name: default
            namespace: default
          roleRef:
            kind: Role
            name: deployment-role
            apiGroup: rbac.authorization.k8s.io